apiVersion: apps/v1
kind: Deployment
metadata:
  name: msa-register-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: msa-register
  template:
    metadata:
      labels:
        app: msa-register
    spec:
      initContainers:
        - name: init-mariadb-check
          image: mariadb:10.11.9-jammy
          command: [ 'sh', '-c', 'until mysqladmin ping -h mariadb --silent; do echo "Waiting for MariaDB..."; sleep 2; done' ]
      containers:
        - name: msa-register
          image: {{ .Values.deployment.register.image }}  # 이미지 이름 수정
          ports:
            - containerPort: 8000
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret  # Secret 이름
                  key: MYSQL_USER  # Secret 키
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: MYSQL_DATABASE
            - name: MYSQL_HOST
              value: "mariadb"
            - name: MYSQL_PORT
              value: "3306"
            - name: CORS_ORIGINS
              value: "http://{{ .Values.deployment.nodejs.ip }}:30010,http://front-nodejs-svc:3000"
      nodeSelector:
        node-type: worker  # Worker 노드에서 실행하도록 설정

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: msa-payment-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: msa-payment
  template:
    metadata:
      labels:
        app: msa-payment
    spec:
      initContainers:
        - name: init-mariadb-check
          image: mariadb:10.11.9-jammy
          command: [ 'sh', '-c', 'until mysqladmin ping -h mariadb --silent; do echo "Waiting for MariaDB..."; sleep 2; done' ]
      containers:
        - name: msa-payment
          image: {{ .Values.deployment.payment.image }}  # 이미지 이름 수정
          ports:
            - containerPort: 8001
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret  # Secret 이름
                  key: MYSQL_USER  # Secret 키
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: MYSQL_DATABASE
            - name: MYSQL_HOST
              value: "mariadb"
            - name: MYSQL_PORT
              value: "3306"
            - name: CORS_ORIGINS
              value: "http://{{ .Values.deployment.nodejs.ip }}:30010,http://front-nodejs-svc:3000"
      nodeSelector:
        node-type: worker  # Worker 노드에서 실행하도록 설정
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: msa-parking-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: msa-parking
  template:
    metadata:
      labels:
        app: msa-parking
    spec:
      initContainers:
        - name: init-mariadb-check
          image: mariadb:10.11.9-jammy
          command: [ 'sh', '-c', 'until mysqladmin ping -h mariadb --silent; do echo "Waiting for MariaDB..."; sleep 2; done' ]
      containers:
        - name: msa-parking
          image: {{ .Values.deployment.parking.image }}  # 이미지 이름 수정
          ports:
            - containerPort: 8002
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret  # Secret 이름
                  key: MYSQL_USER  # Secret 키
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: MYSQL_DATABASE
            - name: MYSQL_HOST
              value: "mariadb"
            - name: MYSQL_PORT
              value: "3306"
            - name: CORS_ORIGINS
              value: "http://{{ .Values.deployment.nodejs.ip }}:30010,http://front-nodejs-svc:3000"
      nodeSelector:
        node-type: worker  # Worker 노드에서 실행하도록 설정
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: msa-statistics-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: msa-statistics
  template:
    metadata:
      labels:
        app: msa-statistics
    spec:
      initContainers:
        - name: init-mariadb-check
          image: mariadb:10.11.9-jammy
          command: [ 'sh', '-c', 'until mysqladmin ping -h mariadb --silent; do echo "Waiting for MariaDB..."; sleep 2; done' ]
      containers:
        - name: msa-statistics
          image: {{ .Values.deployment.statistics.image }}  # 이미지 이름 수정
          ports:
            - containerPort: 8003
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret  # Secret 이름
                  key: MYSQL_USER  # Secret 키
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: MYSQL_DATABASE
            - name: MYSQL_HOST
              value: "mariadb"
            - name: MYSQL_PORT
              value: "3306"
            - name: CORS_ORIGINS
              value: "http://{{ .Values.deployment.nodejs.ip }}:30010,http://front-nodejs-svc:3000"
      nodeSelector:
        node-type: worker  # Worker 노드에서 실행하도록 설정